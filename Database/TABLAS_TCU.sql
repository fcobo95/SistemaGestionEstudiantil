-- ELIMINAR TABLAS
--Se da formato a la fecha en la base de datos para evitar conflictos
ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY';

DROP TABLE USUARIO CASCADE CONSTRAINTS;
DROP TABLE ENCARGADO CASCADE CONSTRAINTS;
DROP TABLE ESTUDIANTE CASCADE CONSTRAINTS;
DROP TABLE PROFESOR CASCADE CONSTRAINTS;
DROP TABLE MATERIA CASCADE CONSTRAINTS;
DROP TABLE PROFESOR_MATERIA CASCADE CONSTRAINTS;
DROP TABLE CALIFICACION CASCADE CONSTRAINTS;
DROP TABLE AUSENCIA CASCADE CONSTRAINTS;
DROP TABLE CONVOCATORIA CASCADE CONSTRAINTS;

--CREAR TABLAS
CREATE TABLE USUARIO (
  ID       NUMBER(8) PRIMARY KEY,
  USERNAME VARCHAR2(20),
  PASSWORD VARCHAR2(20)
);

CREATE TABLE ENCARGADO
(
  IDENTIFICACION  VARCHAR2(20) PRIMARY KEY,
  NOMBRE_COMPLETO VARCHAR2(40) NOT NULL,
  TELEFONO        NUMBER(8),
  PARENTESCO      VARCHAR2(10) NOT NULL,
  DIRECCION       VARCHAR2(20) NOT NULL,
  CORREO          VARCHAR2(30),
  CONSTRAINT CK_ENCARGADO_NOMBRE CHECK (NOMBRE_COMPLETO NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_ENCARGADO_TELEFONO CHECK (TELEFONO > 0),
  CONSTRAINT CK_ENCARGADO_PARENTESCO CHECK (PARENTESCO NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_CORREO CHECK (REGEXP_LIKE(CORREO, '^(\S+)\@(\S+)\.(\S+)$'))
);

CREATE TABLE PROFESOR
(
  IDENTIFICACION VARCHAR2(20) PRIMARY KEY,
  NOMBRE         VARCHAR2(15) NOT NULL,
  APELLIDO1      VARCHAR2(15) NOT NULL,
  APELLIDO2      VARCHAR2(15),
  TELEFONO       NUMBER(8),
  CORREO         VARCHAR2(30),
  CONSTRAINT CK_PROFESOR_NOMBRE CHECK (NOMBRE NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_PROFESOR_APELLIDO1 CHECK (APELLIDO1 NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_PROFESOR_APELLIDO2 CHECK (APELLIDO2 NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_PROFESOR_TELEFONO CHECK (TELEFONO > 0),
  CONSTRAINT CK_PROFESOR_CORREO CHECK (REGEXP_LIKE(CORREO, '^(\S+)\@(\S+)\.(\S+)$'))
);

CREATE TABLE ESTUDIANTE
(
  IDENTIFICACION   VARCHAR2(20) PRIMARY KEY,
  NOMBRE           VARCHAR2(20) NOT NULL,
  APELLIDO1        VARCHAR2(15) NOT NULL,
  APELLIDO2        VARCHAR2(15),
  SEXO             CHAR(1)      NOT NULL,
  FECHA_NACIMIENTO DATE         NOT NULL,
  CICLO            VARCHAR2(7)  NOT NULL,
  NIVEL            NUMBER(2)    NOT NULL,
  SECCION          VARCHAR2(20) NOT NULL,
  ENCARGADO        VARCHAR2(20),
  CONSTRAINT FK_ESTUDIANTE FOREIGN KEY (ENCARGADO) REFERENCES ENCARGADO (IDENTIFICACION),
  CONSTRAINT CK_ESTUDIANTE_NOMBRE CHECK (NOMBRE NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_ESTUDIANTE_APELLIDO1 CHECK (APELLIDO1 NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_ESTUDIANTE_APELLIDO2 CHECK (APELLIDO2 NOT LIKE '%[^Aa-Zz]%'),
  CONSTRAINT CK_ESTUDIANTE_SEXO CHECK (SEXO IN ('H', 'M')),
  CONSTRAINT CK_ESTUDIANTE_CICLO CHECK (CICLO IN ('PRIMER', 'SEGUNDO', 'TERCER', 'CUARTO')),
  CONSTRAINT CK_ESTUDIANTE_NIVEL CHECK (NIVEL BETWEEN 1 AND 11)
);

CREATE TABLE MATERIA
(
  IDENTIFICACION VARCHAR2(8) PRIMARY KEY,
  NOMBRE         VARCHAR2(30) NOT NULL,
  NIVEL          NUMBER(2)    NOT NULL
);

CREATE TABLE PROFESOR_MATERIA
(
  PROFESOR VARCHAR2(20),
  MATERIA  VARCHAR2(8),
  GUIA     CHAR(1),
  CONSTRAINT PK_PROFESOR_MATERIA PRIMARY KEY (PROFESOR, MATERIA),
  CONSTRAINT FK_PROFESOR_MATERIA FOREIGN KEY (PROFESOR) REFERENCES PROFESOR (IDENTIFICACION),
  CONSTRAINT FK_MATERIA_PROFESOR FOREIGN KEY (MATERIA) REFERENCES MATERIA (IDENTIFICACION),
  CONSTRAINT CK_GUIA CHECK (GUIA IN ('S', 'N'))
);

CREATE TABLE CALIFICACION
(
  ESTUDIANTE      VARCHAR2(20),
  MATERIA         VARCHAR2(8),
  PERIODO1        NUMBER(3),
  PERIODO2        NUMBER(3),
  PERIODO3        NUMBER(3),
  RESULTADO_FINAL NUMBER(3),
  CONDICION       VARCHAR2(10) NOT NULL,
  ANO             NUMBER(4),
  CONSTRAINT PK_ESTUDIANTE_MATERIA PRIMARY KEY (ESTUDIANTE, MATERIA, ANO),
  CONSTRAINT FK_ESTUDIANTE_MATERIA FOREIGN KEY (ESTUDIANTE) REFERENCES ESTUDIANTE (IDENTIFICACION),
  CONSTRAINT FK_MATERIA_ESTUDIANTE FOREIGN KEY (MATERIA) REFERENCES MATERIA (IDENTIFICACION),
  CONSTRAINT CK_CALIFICACION_PERIODO1 CHECK (PERIODO1 BETWEEN 0 AND 100),
  CONSTRAINT CK_CALIFICACION_PERIODO2 CHECK (PERIODO2 BETWEEN 0 AND 100),
  CONSTRAINT CK_CALIFICACION_PERIODO3 CHECK (PERIODO3 BETWEEN 0 AND 100),
  CONSTRAINT CK_CALIFICACION_FINAL CHECK (RESULTADO_FINAL BETWEEN 0 AND 100),
  CONSTRAINT CK_CALIFICACION_CONDICION CHECK (CONDICION IN ('APROBADO', 'REPROBADO', 'EN PROCESO')),
  CONSTRAINT CK_CALIFICACION_ANO CHECK (ANO > 0)
);

CREATE TABLE AUSENCIA
(
  ESTUDIANTE  VARCHAR2(20),
  PERIODO     VARCHAR2(3),
  ANO         NUMBER(4),
  TARDIAS     NUMBER(3),
  MOTIVADAS   NUMBER(3),
  INMOTIVADAS NUMBER(3),
  CONSTRAINT PK_AUSENCIA PRIMARY KEY (ESTUDIANTE, PERIODO, ANO),
  CONSTRAINT FK_AUSENCIA FOREIGN KEY (ESTUDIANTE) REFERENCES ESTUDIANTE (IDENTIFICACION),
  CONSTRAINT CK_AUSENCIA_PERIODO CHECK (PERIODO IN ('I', 'II', 'III')),
  CONSTRAINT CK_AUSENCIA_ANO CHECK (ANO > 0),
  CONSTRAINT CK_AUSENCIA_TARDIAS CHECK (TARDIAS > 0),
  CONSTRAINT CK_AUSENCIA_MOTIVADAS CHECK (MOTIVADAS > 0),
  CONSTRAINT CK_AUSENCIA_INMOTIVADAS CHECK (INMOTIVADAS > 0)
);

CREATE TABLE CONVOCATORIA
(
  ESTUDIANTE VARCHAR2(20),
  MATERIA    VARCHAR2(20),
  NUMERO     VARCHAR2(2),
  ANO        NUMBER(4),
  NOTA       NUMBER(3)    NOT NULL,
  CONDICION  VARCHAR2(10) NOT NULL,
  CONSTRAINT PK_CONVOCATORIA PRIMARY KEY (ESTUDIANTE, MATERIA, NUMERO, ANO),
  CONSTRAINT FK_CONVOCATORIA_ESTUDIANTE FOREIGN KEY (ESTUDIANTE) REFERENCES ESTUDIANTE (IDENTIFICACION),
  CONSTRAINT FK_CONVOCATORIA_MATERIA FOREIGN KEY (MATERIA) REFERENCES MATERIA (IDENTIFICACION),
  CONSTRAINT CK_CONVOCATORIA_NUMERO CHECK (NUMERO IN ('I', 'II')),
  CONSTRAINT CK_CONVOCATORIA_ANO CHECK (ANO > 0),
  CONSTRAINT CK_CONVOCATORIA_NOTA CHECK (NOTA BETWEEN 0 AND 100),
  CONSTRAINT CK_CONVOCATORIA_CONDICION CHECK (CONDICION IN ('APROBADO', 'REPROBADO'))
);

COMMIT;